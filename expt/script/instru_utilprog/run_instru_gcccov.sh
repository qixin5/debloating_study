#!/bin/bash

BENCH=$1
PROGNAME=$2
inputset=$3 #E.g., I0

if [ -z $BENCH ] || [ -z $PROGNAME ] || [ -z ${inputset} ]; then
    echo "Missing arguments!"
    exit 1
fi

cd ../debaug/$BENCH/$PROGNAME || exit 1


GCOV_ANAL_BIN=${DEBAUG_DIR}/bin/gcovanalyzer
LCOV2GCOV_BIN=${DEBAUG_DIR}/bin/lcov2gcov
CURRDIR=$(pwd)

BIN=$CURRDIR/$PROGNAME
OUTDIR=$CURRDIR/output.instru/${inputset}_gcccov
TIMEOUT=30
INDIR=$CURRDIR/input
GCOVDIR=$CURRDIR/gcov/${inputset}_gcccov


#Copy input.origin/I${inputset} to input
if [ -d $INDIR ]; then
    rm -fr $INDIR
fi

if [ -d $INDIR.origin/${inputset} ]; then
    if [ $PROGNAME == "make-3.79" ]; then
        cp -r -p $INDIR.origin/${inputset} $INDIR
    else
        cp -r $INDIR.origin/${inputset} $INDIR
    fi
else
    mkdir $INDIR
fi


#Compile with instrumentation
./compile.sh $CURRDIR/src/origin/$PROGNAME.c $BIN "-fprofile-arcs -ftest-coverage" gcc


#Check if .gcno (the file generated by gcc-instru compilation) exists
if [ ! -f ${PROGNAME}.gcno ]; then
    echo "${PROGNAME}.gcno is not found."
    exit 1
fi

#Clean old output files
if [ ! -d $OUTDIR ]; then
    mkdir -p $OUTDIR
else
    rm -fr $OUTDIR/*
fi

#Clean old gcov files
if [ ! -d $GCOVDIR ]; then
    mkdir -p $GCOVDIR
else
    rm -fr $GCOVDIR/*
fi

#Use a tmp directory for running
if [ ! -d $CURRDIR/tmp ]; then
    mkdir $CURRDIR/tmp
else
    chmod 755 -R $CURRDIR/tmp
    rm -fr $CURRDIR/tmp/*
fi

#Change dir
cd $CURRDIR/tmp

#Run tests
INSTRU=true
for testf in $CURRDIR/testscript/${inputset}/*; do
    ###########
    #echo "${testf} $BIN $OUTDIR $TIMEOUT $INDIR $INSTRU"
    ###########    
    ${testf} $BIN $OUTDIR $TIMEOUT $INDIR $INSTRU
    testfname=$(basename ${testf})

    #Create gcov report
    if [ -f ${CURRDIR}/${PROGNAME}.gcda ]; then
	mv ${CURRDIR}/${PROGNAME}.gcda ./        #Copy .gcda produced for this test run
	cp ${CURRDIR}/${PROGNAME}.gcno ./        #Copy .gcno
	cp $CURRDIR/src/origin/$PROGNAME.c ./    #Copy original source
	gcov -i $PROGNAME.c

	if [ -f $PROGNAME.c.gcov ]; then
	    mv $PROGNAME.c.gcov $GCOVDIR/${testfname}
	else
	    echo "No $PROGNAME.c.gcov is generated."
	fi
    else
	echo "No ${PROGNAME}.gcda file found in ${CURRDIR} for running ${inputset}/${testfname}."
    fi

    #Clean
    chmod 755 -R $CURRDIR/tmp
    rm -fr $CURRDIR/tmp/*
done

rm ${CURRDIR}/${PROGNAME}.gcno
