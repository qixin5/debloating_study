argv[1] = <foo bar>
argv[1] = <foo>
argv[1] = </usr/homes/chet>
argv[1] = </usr/homes/chet>
argv[1] = </usr/homes/chet>
./new-exp.tests: HOME: }: syntax error: operand expected (error token is "}")
unset
argv[1] = </usr/homes/chet>
argv[1] = </usr/homes/chet>
argv[1] = </usr/homes/chet>
argv[1] = </usr/homes/chet>
argv[1] = </usr/homes/chet>
argv[1] = </usr/homes/chet>
argv[1] = </usr/homes/chet>
argv[1] = <*@*>
argv[1] = <*@*>
argv[1] = <@*>
argv[1] = <)>
argv[1] = <")">
argv[1] = <-abcd>
argv[2] = <->
argv[1] = <-abcd>
argv[2] = <->
argv[1] = <-abcd->
argv[1] = <a b c d e>
bar foo
bar foo
bar foo
barfoo
barfoo
argv[1] = <abcd>
argv[1] = <efg>
argv[2] = <nop>
argv[1] = <hijklmnop>
argv[1] = <abcdefghijklmnop>
argv[1] = <abcdefghijklmnop>
argv[1] = <ab cd>
argv[2] = <ef>
argv[1] = <gh ij>
argv[2] = <kl mn>
argv[1] = <gh ij>
argv[2] = <kl mn>
argv[3] = <op>
argv[1] = <ab cd>
argv[2] = <ef>
argv[3] = <gh ij>
argv[4] = <kl mn>
argv[5] = <op>
argv[1] = <abcdefghijklmnop>
argv[1] = <4>
argv[1] = <op>
argv[1] = <abcdefghijklmnop>
argv[1] = <abcdefghijklmnop>
./new-exp.tests: ABX: unbound variable
./new-exp.tests: $6: cannot assign in this way
argv[1] = <xxcde>
argv[1] = <axxde>
argv[1] = <abxyz>
argv[1] = <abbcde>
argv[1] = <abcde>
argv[1] = <abcabe>
argv[1] = <abcdlast>
argv[1] = <abcde>
argv[1] = <xxcd>
argv[1] = <abxx>
argv[1] = <xxgh>
argv[1] = <efgh>
argv[1] = <xxfgh>
argv[1] = <zagh>
argv[1] = <zaza>
argv[1] = <zagh>
argv[1] = <efza>
argv[1] = <yyy>
argv[2] = <yyy>
argv[3] = <yyy>
argv[4] = <yyy>
argv[5] = <yyy>
argv[6] = <yyy>
argv[1] = <yyy>
argv[2] = <yyy>
argv[3] = <yyy>
argv[4] = <yyy>
argv[5] = <yyy>
argv[6] = <yyy>
argv[1] = <yyy>
argv[2] = <yyy>
argv[3] = <yyy>
argv[4] = <yyy>
argv[5] = <yyy>
argv[6] = <yyy>
argv[1] = <yyy>
argv[2] = <efgh>
argv[3] = <ijkl>
argv[4] = <mnop>
argv[5] = <qrst>
argv[6] = <uvwx>
argv[1] = <abxx>
argv[2] = <efxx>
argv[3] = <ijxx>
argv[4] = <mnxx>
argv[5] = <qrxx>
argv[6] = <uvxx>
argv[1] = <xxcd>
argv[1] = <xxcd>
argv[2] = <xxgh>
argv[3] = <xxkl>
argv[4] = <xxop>
argv[5] = <xxst>
argv[6] = <xxwx>
argv[1] = <abxx>
argv[2] = <efxx>
argv[3] = <ijxx>
argv[4] = <mnxx>
argv[5] = <qrxx>
argv[6] = <uvxx>
argv[1] = <zaza>
argv[1] = <ijza>
argv[1] = <zaza>
argv[2] = <zaza>
argv[3] = <zaza>
argv[4] = <zaza>
argv[5] = <zaza>
argv[6] = <zaza>
argv[1] = <zacd>
argv[2] = <zagh>
argv[3] = <zakl>
argv[4] = <zaop>
argv[5] = <zast>
argv[6] = <zawx>
argv[1] = <yyy>
argv[2] = <yyy>
argv[3] = <yyy>
argv[4] = <yyy>
argv[5] = <yyy>
argv[6] = <yyy>
argv[1] = <yyy>
argv[2] = <efgh>
argv[3] = <ijkl>
argv[4] = <mnop>
argv[5] = <qrst>
argv[6] = <uvwx>
argv[1] = <abcd>
argv[2] = <efgh>
argv[3] = <ijkl>
argv[4] = <mnop>
argv[5] = <qrst>
argv[6] = <uvwyyy>

this is a test of proc subst
this is test 2
./new-exp.tests: ${#:-foo}: bad substitution
./new-exp.tests: ${#:}: bad substitution
argv[1] = <'>
argv[1] = <">
argv[1] = <"hello">
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <abcdef>
argv[1] = <abc def>
argv[1] = <abcdef>
argv[1] = <abc>
argv[2] = <def>
argv[1] = <abcdef>
argv[1] = <abc def>
argv[1] = <abcdef>
argv[1] = <abc def>
argv[1] = <ab>
argv[2] = <cd>
argv[3] = <ef>
argv[4] = <gh>
argv[1] = <ab>
argv[2] = <cd>
argv[3] = <ef>
argv[4] = <gh>
argv[1] = <ab>
argv[2] = <cd>
argv[3] = <ef>
argv[4] = <gh>
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <hijklmnopqrstuv>
argv[1] = <pqrstuv>
argv[1] = <uvwxyz>
argv[1] = <abcdefghijklmnopqrstuvwxyz>
argv[1] = <abcdefghijklmnopqrst>
argv[1] = <klmnopq>
argv[1] = <klmnopq>
argv[1] = <klmnopq>
argv[1] = <"2 3">
argv[1] = <"2:3">
argv[1] = <"34">
argv[1] = <"3456">
argv[1] = <"3456">
argv[1] = <"3456">
argv[1] = <^A>
argv[2] = <^B>
argv[3] = <^?>
argv[1] = <^A>
argv[2] = <^B>
argv[3] = <^?>
argv[1] = <^A>
argv[2] = <^B>
argv[3] = <^?>
argv[1] = <^A>
argv[2] = <^B>
argv[3] = <^?>
argv[1] = <one/two>
argv[1] = <one/two>
argv[1] = <two>
argv[1] = <oneonetwo>
argv[1] = <onetwo>
argv[1] = <two>
argv[1] = <oneonetwo>
./new-exp.tests: ABXD: parameter unset
