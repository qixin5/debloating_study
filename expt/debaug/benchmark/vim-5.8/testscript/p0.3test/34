#!/usr/bin/perl

use File::Basename;

$scriptName = "move_293.1.1.expect";
$EXPROOT = "${DEBSTUDY_DIR}/expt/debaug/working/vim";
$TEST_DIR = "$EXPROOT/testplans.alt";
$IN_DIR = "$EXPROOT/inputs";
$IN_DB = "$EXPROOT/inputs.alt";


#Directories
$BIN = $ARGV[0];
$OUT_DIR = $ARGV[1];
$TIMEOUT = $ARGV[2];
#$MYIN_DIR = $ARGV[3]; #Currently not used
#$INSTRU = $ARGV[4];

#Files
$SCRIPT_FILE = "testfile";
$SETUP_SCRIPT_PREFIX = "setup";
$CLEANUP_SCRIPT_PREFIX = "cleanup";
$FILE_PERMS = "700";

#Commands
$DIRECTORY_LIST_CMD = "ls -1";
$SCRIPT_LIST_CMD = "ls -1 *.expect";

$ENV{SUBJECTS_SRC_DIR} = dirname($BIN);
$ENV{TESTS_SRC} = $IN_DIR;
$ENV{SHLVL} = 4;

close(STDERR);

$scriptCounter = 0;
@testDirList = `cd $TEST_DIR && $DIRECTORY_LIST_CMD -F`;
foreach $level1(@testDirList)
{
	chop($level1);
	$isDirectory = (chop($level1) =~ '/');
	if($isDirectory == 1)
	{
		@list = `cd $TEST_DIR/$level1 && $DIRECTORY_LIST_CMD -F`;
		@list = sort{$a cmp $b} @list;
		@list = sort{length($a) cmp length($b)} @list;
		foreach $level2(@list)
		{
			chop($level2);
			$isDirectory = (chop($level2) =~ '/');
			if($isDirectory == 1)
			{
				@list2 = `cd $TEST_DIR/$level1/$level2 && $SCRIPT_LIST_CMD`;
				@list2 = sort{$a cmp $b} @list2;
				@list2 = sort{length($a) cmp length($b)} @list2;
#				foreach $scriptName(@list2)
#				{
				        $torun = grep (/^($scriptName)$/, @list2);
					if($torun != 0)
					{
#						chop($scriptName);
#						print(">>>>>>>>running test ".($scriptName)."\n");

						`cp $IN_DB/* $IN_DIR ; chmod $FILE_PERMS $IN_DIR/*`;
				
						@fileParts = split(/\./, $scriptName);
						`cd $TEST_DIR/$level1/$level2 && cat $SETUP_SCRIPT_PREFIX$fileParts[1] $scriptName $CLEANUP_SCRIPT_PREFIX$fileParts[2] > $IN_DIR/$SCRIPT_FILE && chmod $FILE_PERMS $IN_DIR/$SCRIPT_FILE`;
				
						`timeout -k 9 ${TIMEOUT}s $IN_DIR/$SCRIPT_FILE`;
				
						$outfile = "$OUT_DIR/o34";
				
						$num = `ls *.out | wc -l`;
						if($num == 0)
						{
							`mv $IN_DIR/copy1 $outfile`;
						}
						else
						{
							`mv $fileParts[0].$fileParts[1].$fileParts[2].out $outfile`;
						}
				
						`rm -f -v $IN_DIR/*`;
						`rm -f -v $IN_DIR/.*`;
						`rm -f -v $EXPROOT/scripts/errors.err`;
					}
					$scriptCounter = $scriptCounter + 1;
#				}
			}
		}
	}
}

exit();
