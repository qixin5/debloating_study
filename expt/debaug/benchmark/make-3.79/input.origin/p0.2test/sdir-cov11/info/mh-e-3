This is ../info/mh-e, produced by makeinfo version 4.0 from mh-e.texi.

INFO-DIR-SECTION Editors
START-INFO-DIR-ENTRY
* MH-E: (mh-e).		Emacs interface to the MH mail system.
END-INFO-DIR-ENTRY

   This is Edition 1.2, last updated 22 August 1995, of `mh-e, The
Emacs Interface to MH', for mh-e, Version 5.0.2.

   Copyright 1995 Free Software Foundation, Inc.

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided also
that the section entitled "Copying" is included exactly as in the
original, and provided that the entire resulting derived work is
distributed under the terms of a permission notice identical to this
one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be stated in a
translation approved by the Free Software Foundation.


File: mh-e,  Node: Customizing Organizing,  Next: Customizing Printing,  Prev: Customizing Deleting,  Up: Customizing Moving Mail

Organizing Your Mail with Folders
---------------------------------

   By default, operations on folders work only one level at a time.  Set
`mh-recursive-folders' to non-`nil' to operate on all folders.  This
mostly means that you'll be able to see all your folders when you press
<TAB> when prompted for a folder name.  The variable
`mh-auto-folder-collect' is normally turned on to generate a list of
folder names in the background as soon as mh-e is loaded.  Otherwise,
the list is generated when you need a folder name the first time (as
with `o' (`mh-refile-msg')).  If you have a lot of folders and you have
`mh-recursive-folders' set, this could take a while, which is why it's
nice to do the folder collection in the background.

   The function `mh-default-folder-for-message-function' is used by `o'
(`mh-refile-msg') and `C-c C-f C-f' (`mh-to-fcc') to generate a default
folder.  The generated folder name should be a string with a `+' before
it.  For each of my correspondents, I use the same name for both an
alias and a folder.  So, I wrote a function that takes the address in
the `From:' header field, finds it in my alias file, and returns the
alias, which is used as a default folder name.  This is the most
complicated example given here, and it demonstrates several features of
Emacs Lisp programming.  You should be able to drop this into
`~/.emacs', however.  If you use this to store messages in a subfolder
of your Mail directory, you can modify the line that starts `(format
+%s...'  and insert your subfolder after the folder symbol `+'.

     Creating useful default folder for refiling via mh-default-folder-for-message-function
     
     (defun my-mh-folder-from-address ()
       "Determine folder name from address.
     Takes the address in the From: header field, and returns its corresponding
     alias from the user's personal aliases file. Returns `nil' if the address
     was not found."
       (require 'rfc822)                         ; for the rfc822 functions
       (search-forward-regexp "^From: \\(.*\\)") ; grab header field contents
       (save-excursion                     ; save state
         (let ((addr (car (rfc822-addresses  ; get address
                           (buffer-substring (match-beginning 1)
                                             (match-end 1)))))
               (buffer (get-buffer-create " *temp*")) ; set local variables
               folder)
           (set-buffer buffer)             ; jump to temporary buffer
           (unwind-protect                 ; run kill-buffer when done
               (progn                      ; function grouping construct
                 (insert-file-contents (expand-file-name "aliases"
                                                         mh-user-path))
                 (goto-char (point-min))   ; grab aliases file and go to start
                 (setq folder
                       ;; Search for the given address, even commented-out
                       ;; addresses are found!
                       ;; The function search-forward-regexp sets values that are
                       ;; later used by match-beginning and match-end.
                       (if (search-forward-regexp (format "^;*\\(.*\\):.*%s"
                                                          addr) nil t)
                           ;; NOTE WELL: this is what the return value looks like.
                           ;; You can modify the format string to match your own
                           ;; Mail hierarchy.
                           (format "+%s" (buffer-substring (match-beginning 1)
                                                           (match-end 1))))))
             (kill-buffer buffer))          ; get rid of our temporary buffer
           folder)))                        ; function's return value
     
     (setq mh-default-folder-for-message-function 'my-mh-folder-from-address)

   The hook `mh-refile-msg-hook' is called after a message is marked to
be refiled.

   The variable `mh-sortm-args' holds extra arguments to pass on to the
`sortm' command.  Note: this variable is only consulted when a prefix
argument is given to `M-x mh-sort-folder'.  It is used to override any
arguments given in a `sortm:' entry in your MH profile
(`~/.mh_profile').

* Menu:

* Customizing Scan Line Formats::


File: mh-e,  Node: Customizing Scan Line Formats,  Prev: Customizing Organizing,  Up: Customizing Organizing

Scan line formatting
....................

   The name of the program that generates a listing of one line per
message is held in `mh-scan-prog' (default: `"scan"').  Unless this
variable contains an absolute pathname, it is assumed to be in the
`mh-progs' directory.  You may link another program to `scan' (see
`mh-profile'(5)) to produce a different type of listing.

   If you change the format of the scan lines you'll need to tell mh-e
how to parse the new format.  As you see, quite a lot of variables are
involved to do that.  The first variable has to do with pruning out
garbage.

`mh-valid-scan-line'
     This regular expression describes a valid scan line.  This is used
     to eliminate error messages that are occasionally produced by
     `inc' or `scan' (default: `"^ *[0-9]"').

   Next, two variables control how the message numbers are parsed.

`mh-msg-number-regexp'
     This regular expression is used to extract the message number from
     a scan line.  Note that the message number must be placed in quoted
     parentheses, (\\(...\\)), as in the default of `"^ *\\([0-9]+\\)"'.

`mh-msg-search-regexp'
     Given a message number (which is inserted in `%d'), this regular
     expression will match the scan line that it represents (default:
     `"^[^0-9]*%d[^0-9]"').

   Finally, there are a slew of variables that control how mh-e marks up
the scan lines.

`mh-cmd-note'
     Number of characters to skip over before inserting notation
     (default: 4).  Note how it relates to the following regular
     expressions.

`mh-deleted-msg-regexp'
     This regular expression describes deleted messages (default:
     `"^....D"').  See also `mh-note-deleted'.

`mh-refiled-msg-regexp'
     This regular expression describes refiled messages (default:
     `"^....\\^"').  See also `mh-note-refiled'.

`mh-cur-scan-msg-regexp'
     This regular expression matches the current message (default:
     `"^....\\+"').  See also `mh-note-cur'.

`mh-good-msg-regexp'
     This regular expression describes which messages should be shown
     when mh-e goes to the next or previous message.  Normally, deleted
     or refiled messages are skipped over (default: `"^....[^D^]"').

`mh-note-deleted'
     Messages that have been deleted to are marked by this string
     (default: `"D"').  See also `mh-deleted-msg-regexp'.

`mh-note-refiled'
     Messages that have been refiled are marked by this string (default:
     `"^"').  See also `mh-refiled-msg-regexp'.

`mh-note-copied'
     Messages that have been copied are marked by this string (default:
     `"C"').

`mh-note-cur'
     The current message (in MH, not in mh-e) is marked by this string
     (default: `"+"').  See also `mh-cur-scan-msg-regexp'.

`mh-note-repl'
     Messages that have been replied to are marked by this string
     (default: `"-"').

`mh-note-forw'
     Messages that have been forwarded are marked by this string
     (default: `"F"').

`mh-note-dist'
     Messages that have been redistributed are marked by this string
     (default: `"R"').

`mh-note-printed'
     Messages that have been printed are marked by this string (default:
     `"P"').

`mh-note-seq'
     Messages in a sequence are marked by this string (default: `"%"').


File: mh-e,  Node: Customizing Printing,  Next: Customizing Files and Pipes,  Prev: Customizing Organizing,  Up: Customizing Moving Mail

Printing Your Mail
------------------

   Normally messages are printed in the foreground.  If this is slow on
your system, you may elect to set `mh-print-background' to non-`nil' to
print in the background.  If you do this, do not delete the message
until it is printed or else the output may be truncated.  The variable
`mh-lpr-command-format' controls how the printing is actually done.
The string can contain one escape, `%s', which is filled with the name
of the folder and the message number and is useful for print job names.
As an example, the default is `"lpr -J '%s'"'.


File: mh-e,  Node: Customizing Files and Pipes,  Next: Customizing Finishing Up,  Prev: Customizing Printing,  Up: Customizing Moving Mail

Files and Pipes
---------------

   The initial directory for the `mh-store-msg' command is held in
`mh-store-default-directory'.  Since I almost always run `mh-store-msg'
on sources, I set it to my personal source directory like this:

     (setq mh-store-default-directory (expand-file-name "~/src/"))

   Subsequent incarnations of `mh-store-msg' offer the last directory
used as the default.  By the way, `mh-store-msg' calls the Emacs Lisp
function `mh-store-buffer'.  I mention this because you can use it
directly if you're editing a buffer that contains a file that has been
run through `uuencode' or `shar'.  For example, you can extract the
contents of the current buffer in your home directory by typing `M-x
mh-store-buffer <RET> ~ <RET>'.


File: mh-e,  Node: Customizing Finishing Up,  Prev: Customizing Files and Pipes,  Up: Customizing Moving Mail

Finishing Up
------------

   The two variables `mh-before-quit-hook' and `mh-quit-hook' are
called by `q' (`mh-quit').  The former one is called before the quit
occurs, so you might use it to perform any mh-e operations; you could
perform some query and abort the quit or call `mh-execute-commands',
for example.  The latter is not run in an mh-e context, so you might
use it to modify the window setup.


File: mh-e,  Node: Customizing Searching,  Prev: Customizing Moving Mail,  Up: Customizing mh-e

Searching Through Messages
==========================

   If you find that you do the same thing over and over when editing the
search template, you may wish to bind some shortcuts to keys.  This can
be done with the variable `mh-pick-mode-hook', which is called when
`M-s' (`mh-search-folder') is run on a new pattern.

   The string `mh-partial-folder-mode-line-annotation' is used to
annotate the mode line when only a portion of the folder is shown.  For
example, this will be displayed after running `M-s'
(`mh-search-folder') to list messages based on some search criteria
(see *Note Searching::).  The default annotation of `"select"' yields a
mode line that looks like:

     --%%-{+inbox/select} 2 msgs (2-3)      (MH-Folder)--All-----------------


File: mh-e,  Node: Odds and Ends,  Next: History,  Prev: Customizing mh-e,  Up: Top

Odds and Ends
*************

   This appendix covers a few topics that don't fit elsewhere.  Here I
tell you how to report bugs and how to get on the mh-e mailing list.  I
also point out some additional sources of information.

* Menu:

* Bug Reports::
* Mailing List::
* MH FAQ::
* Getting mh-e::


File: mh-e,  Node: Bug Reports,  Next: Mailing List,  Prev: Odds and Ends,  Up: Odds and Ends

Bug Reports
===========

   The current maintainer of mh-e is Stephen Gildea
<gildea@lcs.mit.edu>.  Please mail bug reports directly to him, as well
as any praise or suggestions.  Please include the output of `M-x
mh-version' (*note Miscellaneous::) in any bug report you send.


File: mh-e,  Node: Mailing List,  Next: MH FAQ,  Prev: Bug Reports,  Up: Odds and Ends

mh-e Mailing List
=================

   There is a mailing list, mh-e@x.org, for discussion of mh-e and
announcements of new versions.  Send a "subscribe" message to
mh-e-request@x.org to be added.  Do not report bugs on this list; mail
them directly to the maintainer (*note Bug Reports::).


File: mh-e,  Node: MH FAQ,  Next: Getting mh-e,  Prev: Mailing List,  Up: Odds and Ends

MH FAQ
======

   An FAQ appears monthly in the newsgroup `comp.mail.mh'.  While very
little is there that deals with mh-e specifically, there is an
incredible wealth of material about MH itself which you will find
useful.  The subject of the FAQ is `MH Frequently Asked Questions (FAQ)
with Answers'.

   The FAQ can be also obtained by anonymous `ftp' or via the World
Wide Web (WWW).  It is located at:

     ftp://rtfm.mit.edu/pub/usenet/news.answers/mail/mh-faq/part1
     http://www.cis.ohio-state.edu/hypertext/faq/usenet/mail/mh-faq/part1/faq.html

   Otherwise, you can use mail.  Send mail to mail-server@rtfm.mit.edu
containing the following:

     send usenet/news.answers/mail/mh-faq/part1


File: mh-e,  Node: Getting mh-e,  Prev: MH FAQ,  Up: Odds and Ends

Getting mh-e
============

   If you're running a pre-4.0 version of mh-e, please consider
upgrading.  You can either have your system administrator upgrade your
Emacs, or just the files for mh-e.

   The MH distribution contains a copy of mh-e in `miscellany/mh-e'.
Make sure it is at least Version 4.0.

   The latest version of mh-e can be obtained via anonymous `ftp' from
`ftp.x.org'.  The file containing mh-e is currently
`/misc/mh-e/mh-e-5.0.2.tar.Z'.  I suggest that you extract the files
from `mh-e-5.0.2.tar.Z' in the following fashion:

     % cd                                  # Start in your home directory
     % mkdir lib lib/emacs                 # Create directory for mh-e
     % cd lib/emacs
     % zcat PATH/TO/mh-e-5.0.2.tar.Z | tar xvf -    # Extract files

   To use these new files, add the following to `~/.emacs':

     (setq load-path (cons (expand-file-name "~/lib/emacs") load-path))

   That's it!  If you're already running Emacs, please quit that session
and start again to load in the new mh-e.  Check that you're running the
new version with the command `M-x mh-version' after running any mh-e
command.  The distribution comes with a file called `MH-E-NEWS' so you
can see what's new.


File: mh-e,  Node: History,  Next: Changes to mh-e,  Prev: Odds and Ends,  Up: Top

History of mh-e
***************

   mh-e was originally written by Brian Reid in 1983 and has changed
hands twice since then.  Jim Larus wanted to do something similar for
GNU Emacs, and ended up completely rewriting it that same year.  In
1989, Stephen Gildea picked it up and is now currently improving and
maintaining it.

* Menu:

* From Brian Reid::
* From Jim Larus::
* From Stephen Gildea::


File: mh-e,  Node: From Brian Reid,  Next: From Jim Larus,  Prev: History,  Up: History

From Brian Reid
===============

   One day in 1983 I got the flu and had to stay home from work for
three days with nothing to do.  I used that time to write MHE.  The
fundamental idea behind MHE was that it was a "puppeteer" driving the MH
programs underneath it.  MH had a model that the editor was supposed to
run as a subprocess of the mailer, which seemed to me at the time to be
the tail wagging the dog.  So I turned it around and made the editor
drive the MH programs.  I made sure that the UCI people (who were
maintaining MH at the time) took in my changes and made them stick.

   Today, I still use my own version of MHE because I don't at all like
the way that GNU mh-e works and I've never gotten to be good enough at
hacking Emacs Lisp to make GNU mh-e do what I want.  The Gosling-emacs
version of MHE and the GNU Emacs version of mh-e have almost nothing in
common except similar names.  They work differently, have different
conceptual models, and have different key bindings.  (1)

   Brian Reid, June 1994

   ---------- Footnotes ----------

   (1) After reading this article, I questioned Brian about his version
of MHE, and received some great ideas for improving mh-e such as a
dired-like method of selecting folders; and removing the prompting when
sending mail, filling in the blanks in the draft buffer instead.  I
passed them on to Stephen Gildea, the current maintainer, and he was
excited about the ideas as well.  Perhaps one day, mh-e will again
resemble MHE, although none of these ideas are manifest in Version 5.0.


File: mh-e,  Node: From Jim Larus,  Next: From Stephen Gildea,  Prev: From Brian Reid,  Up: History

From Jim Larus
==============

   Brian Reid, while at CMU or shortly after going to Stanford wrote a
mail reading program called MHE for Gosling Emacs.  It had much the same
structure as mh-e (i.e., invoked MH programs), though it was simpler and
the commands were slightly different.  Unfortunately, I no longer have a
copy so the differences are lost in the mists of time.

   In '82-83, I was working at BBN and wrote a lot of mlisp code in
Gosling Emacs to make it look more like Tennex Emacs.  One of the
packages that I picked up and improved was Reid's mail system.  In '83,
I went back to Berkeley.  About that time, Stallman's first version of
GNU Emacs came out and people started to move to it from Gosling Emacs
(as I recall, the transition took a year or two).  I decided to port
Reid's MHE and used the mlisp to Emacs Lisp translator that came with
GNU Emacs.  It did a lousy job and the resulting code didn't work, so I
bit the bullet and rewrote the code by hand (it was a lot smaller and
simpler then, so it took only a day or two).

   Soon after that, mh-e became part of the standard Emacs distribution
and suggestions kept dribbling in for improvements.  mh-e soon reached
sufficient functionality to keep me happy, but I kept on improving it
because I was a graduate student with plenty of time on my hands and it
was more fun than my dissertation.  In retrospect, the one thing that I
regret is not writing any documentation, which seriously limited the use
and appeal of the package.

   In '89, I came to Wisconsin as a professor and decided not to work on
mh-e.  It was stable, except for minor bugs, and had enough
functionality, so I let it be for a few years.  Stephen Gildea of BBN
began to pester me about the bugs, but I ignored them.  In 1990, he went
off to the X Consortium, said good bye, and said that he would now be
using `xmh'.  A few months later, he came back and said that he
couldn't stand `xmh' and could I put a few more bug fixes into mh-e.
At that point, I had no interest in fixing mh-e, so I gave the
responsibility of maintenance to him and he has done a fine job since
then.

   Jim Larus, June 1994


File: mh-e,  Node: From Stephen Gildea,  Prev: From Jim Larus,  Up: History

From Stephen Gildea
===================

   In 1987 I went to work for Bolt Beranek and Newman, as Jim had before
me.  In my previous job, I had been using RMAIL, but as my folders tend
to run large, I was frustrated with the speed of RMAIL.  However, I
stuck with it because I wanted the GNU Emacs interface.  I am very
familiar and comfortable with the Emacs interface (with just a few
modifications of my own) and dislike having to use applications with
embedded editors; they never live up to Emacs.

   MH is the mail reader of choice at BBN, so I converted to it.  Since
I didn't want to give up using an Emacs interface, I started using mh-e.
As is my wont, I started hacking on it almost immediately.  I first used
version 3.4m.  One of the first features I added was to treat the folder
buffer as a file-visiting buffer: you could lock it, save it, and be
warned of unsaved changes when killing it.  I also worked to bring its
functionality a little closer to RMAIL.  Jim Larus was very cooperative
about merging in my changes, and my efforts first appeared in version
3.6, distributed with Emacs 18.52 in 1988.  Next I decided mh-e was too
slow and optimized it a lot.  Version, 3.7, distributed with Emacs 18.56
in 1990, was noticeably faster.

   When I moved to the X Consortium I became the first person there to
not use xmh.  (There is now one other engineer there using mh-e.)  About
this point I took over maintenance of mh-e from Jim and was finally able
to add some features Jim hadn't accepted, such as the backward searching
undo.  My first release was 3.8 (Emacs 18.58) in 1992.

   Now, in 1994, we see a flurry of releases, with both 4.0 and 5.0.
Version 4.0 added many new features, including background folder
collection and support for composing MIME messages.  (Reading MIME
messages remains to be done, alas.)  While writing this book, Bill
Wohler gave mh-e its closest examination ever, uncovering bugs and
inconsistencies that required a new major version to fix, and so version
5 was released.

   Stephen Gildea, June 1994


File: mh-e,  Node: Changes to mh-e,  Next: Copying,  Prev: History,  Up: Top

Changes to mh-e
***************

   mh-e had a fairly major facelift between Versions 3 and 4.  The
differences between Versions 4 and 5 from the user's viewpoint are
relatively minor.  The prompting order for the folder and message number
in a couple of functions had been switched inadvertently in Version 4.
Version 5 switches the order back.  The `+inbox' folder is no longer
hard-coded, but rather uses the `Inbox' MH Profile entry.  See the file
`etc/MH-E-NEWS' in the Emacs distribution for more details on the
changes.

   This section documents the changes between Version 3 and newer
versions so that you'll know which commands to use (or which commands
you won't have) in case you're stuck with an old version.

   The following tables summarize the changes to buffer names, commands
and variables.

Buffer Mode Names
=================

     Version 3           Version 4
     
     mh-e folder        MH-Folder
     mh-e scan          MH-Folder
     mh-e show          MH-Folder Show
     Fundamental        MH-Show
     mh-e letter        MH-Letter
     mh-e letter        MH-Pick

Commands
========

                Version 3                        Version 4
     
     Function               Command   Command          Function
     
     mh-first-msg           <          M-<               mh-first-msg
     -                      -          M->               mh-last-msg
     mh-show                .          RET               mh-show
     -                      -          ,                 mh-header-display
     mh-reply               a          r                 mh-reply
     mh-redistribute        r          M-d               mh-redistribute
     mh-unshar-msg          -          M-n               mh-store-msg
     mh-write-msg-to-file   M-o        C-o               mh-write-msg-to-file
     mh-delete-msg-from-seq C-u M-%    M-#               mh-delete-seq
     -                      -          M-q               mh-list-sequences
     mh-quit                b          q                 mh-quit
     -                      -          C-C C-f C-r       mh-to-field (`From:')
     -                      -          C-C C-f C-d       mh-to-field (`Dcc:')

Variables
=========

               Version 3                           Version 4
     
     Variable              Value             Value           Variable
     
     mh-show-buffer-      "{%%b}  %s/%d"    "{show-%s} %d"  mh-show-buffer-
     mode-line-buffer-id                                    mode-line-buffer-id
     mh-unshar-default-   ""                nil             mh-store-default-
     directory                                              directory

New Variables
=============

     mail-citation-hook                           mh-new-draft-cleaned-headers
     mail-header-separator                        mh-pick-mode-hook
     mh-auto-folder-collect                       mh-refile-msg-hook
     mh-comp-formfile                             mh-scan-prog
     mh-repl-formfile                             mh-send-prog
     mh-delete-msg-hook                           mh-show-hook
     mh-forward-subject-format                    mh-show-mode-hook
     mh-inc-prog                                  mh-signature-file-name
     mh-mime-content-types                        mh-sortm-args
     mh-default-folder-for-message-function       mh-repl-formfile
     mh-mhn-args


File: mh-e,  Node: Copying,  Next: Command Index,  Prev: Changes to mh-e,  Up: Top

GNU GENERAL PUBLIC LICENSE
**************************

                         Version 2, June 1991

     Copyright (C) 1989, 1991 Free Software Foundation, Inc.
     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
     
     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

Preamble
========

   The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Library General Public License instead.)  You can apply it to
your programs, too.

   When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it in
new free programs; and that you know you can do these things.

   To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

   For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

   We protect your rights with two steps: (1) copyright the software,
and (2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

   Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

   Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

   The precise terms and conditions for copying, distribution and
modification follow.

    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

  0. This License applies to any program or other work which contains a
     notice placed by the copyright holder saying it may be distributed
     under the terms of this General Public License.  The "Program",
     below, refers to any such program or work, and a "work based on
     the Program" means either the Program or any derivative work under
     copyright law: that is to say, a work containing the Program or a
     portion of it, either verbatim or with modifications and/or
     translated into another language.  (Hereinafter, translation is
     included without limitation in the term "modification".)  Each
     licensee is addressed as "you".

     Activities other than copying, distribution and modification are
     not covered by this License; they are outside its scope.  The act
     of running the Program is not restricted, and the output from the
     Program is covered only if its contents constitute a work based on
     the Program (independent of having been made by running the
     Program).  Whether that is true depends on what the Program does.

  1. You may copy and distribute verbatim copies of the Program's
     source code as you receive it, in any medium, provided that you
     conspicuously and appropriately publish on each copy an appropriate
     copyright notice and disclaimer of warranty; keep intact all the
     notices that refer to this License and to the absence of any
     warranty; and give any other recipients of the Program a copy of
     this License along with the Program.

     You may charge a fee for the physical act of transferring a copy,
     and you may at your option offer warranty protection in exchange
     for a fee.

  2. You may modify your copy or copies of the Program or any portion
     of it, thus forming a work based on the Program, and copy and
     distribute such modifications or work under the terms of Section 1
     above, provided that you also meet all of these conditions:

       a. You must cause the modified files to carry prominent notices
          stating that you changed the files and the date of any change.

       b. You must cause any work that you distribute or publish, that
          in whole or in part contains or is derived from the Program
          or any part thereof, to be licensed as a whole at no charge
          to all third parties under the terms of this License.

       c. If the modified program normally reads commands interactively
          when run, you must cause it, when started running for such
          interactive use in the most ordinary way, to print or display
          an announcement including an appropriate copyright notice and
          a notice that there is no warranty (or else, saying that you
          provide a warranty) and that users may redistribute the
          program under these conditions, and telling the user how to
          view a copy of this License.  (Exception: if the Program
          itself is interactive but does not normally print such an
          announcement, your work based on the Program is not required
          to print an announcement.)

     These requirements apply to the modified work as a whole.  If
     identifiable sections of that work are not derived from the
     Program, and can be reasonably considered independent and separate
     works in themselves, then this License, and its terms, do not
     apply to those sections when you distribute them as separate
     works.  But when you distribute the same sections as part of a
     whole which is a work based on the Program, the distribution of
     the whole must be on the terms of this License, whose permissions
     for other licensees extend to the entire whole, and thus to each
     and every part regardless of who wrote it.

     Thus, it is not the intent of this section to claim rights or
     contest your rights to work written entirely by you; rather, the
     intent is to exercise the right to control the distribution of
     derivative or collective works based on the Program.

     In addition, mere aggregation of another work not based on the
     Program with the Program (or with a work based on the Program) on
     a volume of a storage or distribution medium does not bring the
     other work under the scope of this License.

  3. You may copy and distribute the Program (or a work based on it,
     under Section 2) in object code or executable form under the terms
     of Sections 1 and 2 above provided that you also do one of the
     following:

       a. Accompany it with the complete corresponding machine-readable
          source code, which must be distributed under the terms of
          Sections 1 and 2 above on a medium customarily used for
          software interchange; or,

       b. Accompany it with a written offer, valid for at least three
          years, to give any third party, for a charge no more than your
          cost of physically performing source distribution, a complete
          machine-readable copy of the corresponding source code, to be
          distributed under the terms of Sections 1 and 2 above on a
          medium customarily used for software interchange; or,

       c. Accompany it with the information you received as to the offer
          to distribute corresponding source code.  (This alternative is
          allowed only for noncommercial distribution and only if you
          received the program in object code or executable form with
          such an offer, in accord with Subsection b above.)

     The source code for a work means the preferred form of the work for
     making modifications to it.  For an executable work, complete
     source code means all the source code for all modules it contains,
     plus any associated interface definition files, plus the scripts
     used to control compilation and installation of the executable.
     However, as a special exception, the source code distributed need
     not include anything that is normally distributed (in either
     source or binary form) with the major components (compiler,
     kernel, and so on) of the operating system on which the executable
     runs, unless that component itself accompanies the executable.

     If distribution of executable or object code is made by offering
     access to copy from a designated place, then offering equivalent
     access to copy the source code from the same place counts as
     distribution of the source code, even though third parties are not
     compelled to copy the source along with the object code.

  4. You may not copy, modify, sublicense, or distribute the Program
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense or distribute the Program is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

  5. You are not required to accept this License, since you have not
     signed it.  However, nothing else grants you permission to modify
     or distribute the Program or its derivative works.  These actions
     are prohibited by law if you do not accept this License.
     Therefore, by modifying or distributing the Program (or any work
     based on the Program), you indicate your acceptance of this
     License to do so, and all its terms and conditions for copying,
     distributing or modifying the Program or works based on it.

  6. Each time you redistribute the Program (or any work based on the
     Program), the recipient automatically receives a license from the
     original licensor to copy, distribute or modify the Program
     subject to these terms and conditions.  You may not impose any
     further restrictions on the recipients' exercise of the rights
     granted herein.  You are not responsible for enforcing compliance
     by third parties to this License.

  7. If, as a consequence of a court judgment or allegation of patent
     infringement or for any other reason (not limited to patent
     issues), conditions are imposed on you (whether by court order,
     agreement or otherwise) that contradict the conditions of this
     License, they do not excuse you from the conditions of this
     License.  If you cannot distribute so as to satisfy simultaneously
     your obligations under this License and any other pertinent
     obligations, then as a consequence you may not distribute the
     Program at all.  For example, if a patent license would not permit
     royalty-free redistribution of the Program by all those who
     receive copies directly or indirectly through you, then the only
     way you could satisfy both it and this License would be to refrain
     entirely from distribution of the Program.

     If any portion of this section is held invalid or unenforceable
     under any particular circumstance, the balance of the section is
     intended to apply and the section as a whole is intended to apply
     in other circumstances.

     It is not the purpose of this section to induce you to infringe any
     patents or other property right claims or to contest validity of
     any such claims; this section has the sole purpose of protecting
     the integrity of the free software distribution system, which is
     implemented by public license practices.  Many people have made
     generous contributions to the wide range of software distributed
     through that system in reliance on consistent application of that
     system; it is up to the author/donor to decide if he or she is
     willing to distribute software through any other system and a
     licensee cannot impose that choice.

     This section is intended to make thoroughly clear what is believed
     to be a consequence of the rest of this License.

  8. If the distribution and/or use of the Program is restricted in
     certain countries either by patents or by copyrighted interfaces,
     the original copyright holder who places the Program under this
     License may add an explicit geographical distribution limitation
     excluding those countries, so that distribution is permitted only
     in or among countries not thus excluded.  In such case, this
     License incorporates the limitation as if written in the body of
     this License.

  9. The Free Software Foundation may publish revised and/or new
     versions of the General Public License from time to time.  Such
     new versions will be similar in spirit to the present version, but
     may differ in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the
     Program specifies a version number of this License which applies
     to it and "any later version", you have the option of following
     the terms and conditions either of that version or of any later
     version published by the Free Software Foundation.  If the Program
     does not specify a version number of this License, you may choose
     any version ever published by the Free Software Foundation.

 10. If you wish to incorporate parts of the Program into other free
     programs whose distribution conditions are different, write to the
     author to ask for permission.  For software which is copyrighted
     by the Free Software Foundation, write to the Free Software
     Foundation; we sometimes make exceptions for this.  Our decision
     will be guided by the two goals of preserving the free status of
     all derivatives of our free software and of promoting the sharing
     and reuse of software generally.

                                NO WARRANTY

 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO
     WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE
     LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT
     WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT
     NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
     FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE
     QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
     PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY
     SERVICING, REPAIR OR CORRECTION.

 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
     WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY
     MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE
     LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,
     INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR
     INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU
     OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY
     OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN
     ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

                      END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Programs
=============================================

   If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these
terms.

   To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

     ONE LINE TO GIVE THE PROGRAM'S NAME AND AN IDEA OF WHAT IT DOES.
     Copyright (C) 19YY  NAME OF AUTHOR
     
     This program is free software; you can redistribute it and/or
     modify it under the terms of the GNU General Public License
     as published by the Free Software Foundation; either version 2
     of the License, or (at your option) any later version.
     
     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
     
     You should have received a copy of the GNU General Public License along
     with this program; if not, write to the Free Software Foundation, Inc.,
     59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

   Also add information on how to contact you by electronic and paper
mail.

   If the program is interactive, make it output a short notice like
this when it starts in an interactive mode:

     Gnomovision version 69, Copyright (C) 19YY NAME OF AUTHOR
     Gnomovision comes with ABSOLUTELY NO WARRANTY; for details
     type `show w'.  This is free software, and you are welcome
     to redistribute it under certain conditions; type `show c'
     for details.

   The hypothetical commands `show w' and `show c' should show the
appropriate parts of the General Public License.  Of course, the
commands you use may be called something other than `show w' and `show
c'; they could even be mouse-clicks or menu items--whatever suits your
program.

   You should also get your employer (if you work as a programmer) or
your school, if any, to sign a "copyright disclaimer" for the program,
if necessary.  Here is a sample; alter the names:

     Yoyodyne, Inc., hereby disclaims all copyright
     interest in the program `Gnomovision'
     (which makes passes at compilers) written
     by James Hacker.
     
     SIGNATURE OF TY COON, 1 April 1989
     Ty Coon, President of Vice

   This General Public License does not permit incorporating your
program into proprietary programs.  If your program is a subroutine
library, you may consider it more useful to permit linking proprietary
applications with the library.  If this is what you want to do, use the
GNU Library General Public License instead of this License.


File: mh-e,  Node: Command Index,  Next: Variable Index,  Prev: Copying,  Up: Top

Command Index
*************

* Menu:

* display-time:                          Incorporating.
* mh-burst-digest:                       Reading Digests.
* mh-check-whom:                         Recipients.
* mh-copy-msg:                           Organizing.
* mh-delete-msg:                         Deleting.
* mh-delete-msg-from-seq:                Sequences.
* mh-delete-msg-no-motion:               Deleting.
* mh-delete-seq:                         Sequences.
* mh-do-pick-search:                     Searching.
* mh-edit-again:                         Old Drafts.
* mh-edit-mhn:                           Sending MIME.
* mh-execute-commands <1>:               Customizing Finishing Up.
* mh-execute-commands <2>:               Finishing Up.
* mh-execute-commands:                   Customizing Incorporating.
* mh-extract-rejected-mail:              Old Drafts.
* mh-first-msg:                          Moving Around.
* mh-forward:                            Forwarding.
* mh-fully-kill-draft:                   Killing Draft.
* mh-goto-msg:                           Moving Around.
* mh-inc-folder:                         Incorporating.
* mh-insert-letter:                      Inserting Messages.
* mh-insert-signature:                   Signature.
* mh-insert-signature, example:          Customizing Sending.
* mh-last-msg:                           Moving Around.
* mh-list-folders:                       Organizing.
* mh-list-sequences:                     Sequences.
* mh-mhn-compose-anon-ftp:               FTP.
* mh-mhn-compose-external-compressed-tar: Tar.
* mh-mhn-compose-forw:                   Forwarding MIME.
* mh-mhn-compose-insertion:              Other MIME Objects.
* mh-msg-is-in-seq:                      Sequences.
* mh-narrow-to-seq:                      Sequences.
* mh-next-undeleted-msg:                 Moving Around.
* mh-pack-folder:                        Organizing.
* mh-page-digest:                        Reading Digests.
* mh-page-digest-backwards:              Reading Digests.
* mh-page-msg:                           Viewing.
* mh-pipe-msg:                           Files and Pipes.
* mh-previous-page:                      Viewing.
* mh-previous-undeleted-msg:             Moving Around.
* mh-print-msg:                          Printing.
* mh-put-msg-in-seq:                     Sequences.
* mh-quit:                               Finishing Up.
* mh-redistribute:                       Redistributing.
* mh-refile-msg <1>:                     Customizing Organizing.
* mh-refile-msg:                         Organizing.
* mh-refile-or-write-again:              Organizing.
* mh-reply:                              Replying.
* mh-rescan-folder:                      Organizing.
* mh-rescan-folder, example:             Customizing Incorporating.
* mh-revert-mhn-edit:                    Sending MIME.
* mh-rmail <1>:                          Finishing Up.
* mh-rmail <2>:                          Reading Mail.
* mh-rmail:                              Reading Mail Tour.
* mh-rmail, example:                     Customizing Reading.
* mh-search-folder:                      Searching.
* mh-send:                               Sending Mail.
* mh-send-letter:                        Sending Message.
* mh-show:                               Viewing.
* mh-show, example:                      Customizing Incorporating.
* mh-smail <1>:                          Sending Mail Tour.
* mh-smail <2>:                          Sending Mail.
* mh-smail:                              Processing Mail Tour.
* mh-smail-other-window:                 Sending Mail.
* mh-sort-folder <1>:                    Organizing.
* mh-sort-folder:                        Customizing Organizing.
* mh-store-buffer:                       Customizing Files and Pipes.
* mh-store-msg <1>:                      Customizing Files and Pipes.
* mh-store-msg:                          Files and Pipes.
* mh-to-fcc <1>:                         Customizing Organizing.
* mh-to-fcc:                             Header.
* mh-to-field <1>:                       Searching.
* mh-to-field:                           Header.
* mh-toggle-showing:                     Moving Around.
* mh-undo:                               Finishing Up.
* mh-undo-folder:                        Finishing Up.
* mh-update-sequences:                   Sequences.
* mh-version:                            Miscellaneous.
* mh-visit-folder:                       Organizing.
* mh-widen:                              Sequences.
* mh-write-msg-to-file:                  Files and Pipes.
* mh-yank-cur-msg:                       Inserting Letter.

